<?php
/**
 * OIDCConfigTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OIDCConfigTest Class Doc Comment
 *
 * @category    Class
 * @description OIDCConfig
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class OIDCConfigTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OIDCConfig"
     */
    public function testOIDCConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authorization_endpoint"
     */
    public function testPropertyAuthorizationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannel_logout_session_supported"
     */
    public function testPropertyBackchannelLogoutSessionSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backchannel_logout_supported"
     */
    public function testPropertyBackchannelLogoutSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claims_parameter_supported"
     */
    public function testPropertyClaimsParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "claims_supported"
     */
    public function testPropertyClaimsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "code_challenge_methods_supported"
     */
    public function testPropertyCodeChallengeMethodsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credentials_endpoint_draft_00"
     */
    public function testPropertyCredentialsEndpointDraft00()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credentials_supported_draft_00"
     */
    public function testPropertyCredentialsSupportedDraft00()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "end_session_endpoint"
     */
    public function testPropertyEndSessionEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannel_logout_session_supported"
     */
    public function testPropertyFrontchannelLogoutSessionSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frontchannel_logout_supported"
     */
    public function testPropertyFrontchannelLogoutSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "grant_types_supported"
     */
    public function testPropertyGrantTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id_token_signed_response_alg"
     */
    public function testPropertyIdTokenSignedResponseAlg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id_token_signing_alg_values_supported"
     */
    public function testPropertyIdTokenSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuer"
     */
    public function testPropertyIssuer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "jwks_uri"
     */
    public function testPropertyJwksUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_endpoint"
     */
    public function testPropertyRegistrationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_object_signing_alg_values_supported"
     */
    public function testPropertyRequestObjectSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_parameter_supported"
     */
    public function testPropertyRequestParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_uri_parameter_supported"
     */
    public function testPropertyRequestUriParameterSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "require_request_uri_registration"
     */
    public function testPropertyRequireRequestUriRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "response_modes_supported"
     */
    public function testPropertyResponseModesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "response_types_supported"
     */
    public function testPropertyResponseTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revocation_endpoint"
     */
    public function testPropertyRevocationEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scopes_supported"
     */
    public function testPropertyScopesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subject_types_supported"
     */
    public function testPropertySubjectTypesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "token_endpoint"
     */
    public function testPropertyTokenEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "token_endpoint_auth_methods_supported"
     */
    public function testPropertyTokenEndpointAuthMethodsSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfo_endpoint"
     */
    public function testPropertyUserinfoEndpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfo_signed_response_alg"
     */
    public function testPropertyUserinfoSignedResponseAlg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userinfo_signing_alg_values_supported"
     */
    public function testPropertyUserinfoSigningAlgValuesSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
