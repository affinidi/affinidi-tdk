// Mocks generated by Mockito 5.4.6 from annotations
// in affinidi_tdk_atm_client/test/atm_client_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:affinidi_tdk_atm_client/atm_client.dart' as _i2;
import 'package:affinidi_tdk_atm_client/src/common/atm_mediator_client.dart'
    as _i6;
import 'package:affinidi_tdk_mediator_client/mediator_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:ssi/ssi.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeThreadingMetrics_0 extends _i1.SmartFake
    implements _i2.ThreadingMetrics {
  _FakeThreadingMetrics_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDidDocument_1 extends _i1.SmartFake implements _i3.DidDocument {
  _FakeDidDocument_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKeyPair_2 extends _i1.SmartFake implements _i3.KeyPair {
  _FakeKeyPair_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDidSigner_3 extends _i1.SmartFake implements _i3.DidSigner {
  _FakeDidSigner_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForwardMessageOptions_4 extends _i1.SmartFake
    implements _i4.ForwardMessageOptions {
  _FakeForwardMessageOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketOptions_5 extends _i1.SmartFake
    implements _i4.WebSocketOptions {
  _FakeWebSocketOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlainTextMessage_6 extends _i1.SmartFake
    implements _i4.PlainTextMessage {
  _FakePlainTextMessage_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDidcommMessage_7 extends _i1.SmartFake
    implements _i4.DidcommMessage {
  _FakeDidcommMessage_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_8<T> extends _i1.SmartFake
    implements _i5.StreamSubscription<T> {
  _FakeStreamSubscription_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AtmMediatorClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAtmMediatorClient extends _i1.Mock implements _i6.AtmMediatorClient {
  MockAtmMediatorClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ThreadingMetrics get metrics => (super.noSuchMethod(
        Invocation.getter(#metrics),
        returnValue: _FakeThreadingMetrics_0(
          this,
          Invocation.getter(#metrics),
        ),
      ) as _i2.ThreadingMetrics);

  @override
  _i3.DidDocument get mediatorDidDocument => (super.noSuchMethod(
        Invocation.getter(#mediatorDidDocument),
        returnValue: _FakeDidDocument_1(
          this,
          Invocation.getter(#mediatorDidDocument),
        ),
      ) as _i3.DidDocument);

  @override
  _i3.KeyPair get keyPair => (super.noSuchMethod(
        Invocation.getter(#keyPair),
        returnValue: _FakeKeyPair_2(
          this,
          Invocation.getter(#keyPair),
        ),
      ) as _i3.KeyPair);

  @override
  String get didKeyId => (super.noSuchMethod(
        Invocation.getter(#didKeyId),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#didKeyId),
        ),
      ) as String);

  @override
  _i3.DidSigner get signer => (super.noSuchMethod(
        Invocation.getter(#signer),
        returnValue: _FakeDidSigner_3(
          this,
          Invocation.getter(#signer),
        ),
      ) as _i3.DidSigner);

  @override
  _i4.ForwardMessageOptions get forwardMessageOptions => (super.noSuchMethod(
        Invocation.getter(#forwardMessageOptions),
        returnValue: _FakeForwardMessageOptions_4(
          this,
          Invocation.getter(#forwardMessageOptions),
        ),
      ) as _i4.ForwardMessageOptions);

  @override
  _i4.WebSocketOptions get webSocketOptions => (super.noSuchMethod(
        Invocation.getter(#webSocketOptions),
        returnValue: _FakeWebSocketOptions_5(
          this,
          Invocation.getter(#webSocketOptions),
        ),
      ) as _i4.WebSocketOptions);

  @override
  _i5.Future<_i4.PlainTextMessage> waitForMessage({
    required String? messageType,
    required String? threadId,
    required String? fromDid,
    required String? accessToken,
    required _i3.DidManager? didManager,
    required _i3.DidDocument? atmServiceDidDocument,
    required _i2.ClientOptions? clientOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #waitForMessage,
          [],
          {
            #messageType: messageType,
            #threadId: threadId,
            #fromDid: fromDid,
            #accessToken: accessToken,
            #didManager: didManager,
            #atmServiceDidDocument: atmServiceDidDocument,
            #clientOptions: clientOptions,
          },
        ),
        returnValue:
            _i5.Future<_i4.PlainTextMessage>.value(_FakePlainTextMessage_6(
          this,
          Invocation.method(
            #waitForMessage,
            [],
            {
              #messageType: messageType,
              #threadId: threadId,
              #fromDid: fromDid,
              #accessToken: accessToken,
              #didManager: didManager,
              #atmServiceDidDocument: atmServiceDidDocument,
              #clientOptions: clientOptions,
            },
          ),
        )),
      ) as _i5.Future<_i4.PlainTextMessage>);

  @override
  _i5.Future<_i4.DidcommMessage> sendMessage(
    _i4.ForwardMessage? message, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
          {#accessToken: accessToken},
        ),
        returnValue: _i5.Future<_i4.DidcommMessage>.value(_FakeDidcommMessage_7(
          this,
          Invocation.method(
            #sendMessage,
            [message],
            {#accessToken: accessToken},
          ),
        )),
      ) as _i5.Future<_i4.DidcommMessage>);

  @override
  _i5.Future<List<String>> listInboxMessageIds({String? accessToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listInboxMessageIds,
          [],
          {#accessToken: accessToken},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchMessages({
    required List<String>? messageIds,
    bool? deleteOnMediator = true,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessages,
          [],
          {
            #messageIds: messageIds,
            #deleteOnMediator: deleteOnMediator,
            #accessToken: accessToken,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> fetchMessagesStartingFrom({
    DateTime? startFrom,
    int? batchSize = 25,
    bool? deleteOnMediator = true,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMessagesStartingFrom,
          [],
          {
            #startFrom: startFrom,
            #batchSize: batchSize,
            #deleteOnMediator: deleteOnMediator,
            #accessToken: accessToken,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> deleteMessages({
    required List<String>? messageIds,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessages,
          [],
          {
            #messageIds: messageIds,
            #accessToken: accessToken,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i5.StreamSubscription<dynamic>> listenForIncomingMessages(
    void Function(Map<String, dynamic>)? onMessage, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForIncomingMessages,
          [onMessage],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
            #accessToken: accessToken,
          },
        ),
        returnValue: _i5.Future<_i5.StreamSubscription<dynamic>>.value(
            _FakeStreamSubscription_8<dynamic>(
          this,
          Invocation.method(
            #listenForIncomingMessages,
            [onMessage],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
              #accessToken: accessToken,
            },
          ),
        )),
      ) as _i5.Future<_i5.StreamSubscription<dynamic>>);

  @override
  _i5.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.DidcommMessage> packMessage(
    _i4.PlainTextMessage? message, {
    required _i4.MessageOptions? messageOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #packMessage,
          [message],
          {#messageOptions: messageOptions},
        ),
        returnValue: _i5.Future<_i4.DidcommMessage>.value(_FakeDidcommMessage_7(
          this,
          Invocation.method(
            #packMessage,
            [message],
            {#messageOptions: messageOptions},
          ),
        )),
      ) as _i5.Future<_i4.DidcommMessage>);
}
