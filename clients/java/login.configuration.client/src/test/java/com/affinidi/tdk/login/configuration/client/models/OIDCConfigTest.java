/*
 * OidcVpAdapterBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.affinidi.tdk.login.configuration.client.models;

import com.affinidi.tdk.login.configuration.client.models.OIDCConfigCredentialsSupportedDraft00Inner;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OIDCConfig
 */
class OIDCConfigTest {
    private final OIDCConfig model = new OIDCConfig();

    /**
     * Model tests for OIDCConfig
     */
    @Test
    void testOIDCConfig() {
        // TODO: test OIDCConfig
    }

    /**
     * Test the property 'authorizationEndpoint'
     */
    @Test
    void authorizationEndpointTest() {
        // TODO: test authorizationEndpoint
    }

    /**
     * Test the property 'backchannelLogoutSessionSupported'
     */
    @Test
    void backchannelLogoutSessionSupportedTest() {
        // TODO: test backchannelLogoutSessionSupported
    }

    /**
     * Test the property 'backchannelLogoutSupported'
     */
    @Test
    void backchannelLogoutSupportedTest() {
        // TODO: test backchannelLogoutSupported
    }

    /**
     * Test the property 'claimsParameterSupported'
     */
    @Test
    void claimsParameterSupportedTest() {
        // TODO: test claimsParameterSupported
    }

    /**
     * Test the property 'claimsSupported'
     */
    @Test
    void claimsSupportedTest() {
        // TODO: test claimsSupported
    }

    /**
     * Test the property 'codeChallengeMethodsSupported'
     */
    @Test
    void codeChallengeMethodsSupportedTest() {
        // TODO: test codeChallengeMethodsSupported
    }

    /**
     * Test the property 'credentialsEndpointDraft00'
     */
    @Test
    void credentialsEndpointDraft00Test() {
        // TODO: test credentialsEndpointDraft00
    }

    /**
     * Test the property 'credentialsSupportedDraft00'
     */
    @Test
    void credentialsSupportedDraft00Test() {
        // TODO: test credentialsSupportedDraft00
    }

    /**
     * Test the property 'endSessionEndpoint'
     */
    @Test
    void endSessionEndpointTest() {
        // TODO: test endSessionEndpoint
    }

    /**
     * Test the property 'frontchannelLogoutSessionSupported'
     */
    @Test
    void frontchannelLogoutSessionSupportedTest() {
        // TODO: test frontchannelLogoutSessionSupported
    }

    /**
     * Test the property 'frontchannelLogoutSupported'
     */
    @Test
    void frontchannelLogoutSupportedTest() {
        // TODO: test frontchannelLogoutSupported
    }

    /**
     * Test the property 'grantTypesSupported'
     */
    @Test
    void grantTypesSupportedTest() {
        // TODO: test grantTypesSupported
    }

    /**
     * Test the property 'idTokenSignedResponseAlg'
     */
    @Test
    void idTokenSignedResponseAlgTest() {
        // TODO: test idTokenSignedResponseAlg
    }

    /**
     * Test the property 'idTokenSigningAlgValuesSupported'
     */
    @Test
    void idTokenSigningAlgValuesSupportedTest() {
        // TODO: test idTokenSigningAlgValuesSupported
    }

    /**
     * Test the property 'issuer'
     */
    @Test
    void issuerTest() {
        // TODO: test issuer
    }

    /**
     * Test the property 'jwksUri'
     */
    @Test
    void jwksUriTest() {
        // TODO: test jwksUri
    }

    /**
     * Test the property 'registrationEndpoint'
     */
    @Test
    void registrationEndpointTest() {
        // TODO: test registrationEndpoint
    }

    /**
     * Test the property 'requestObjectSigningAlgValuesSupported'
     */
    @Test
    void requestObjectSigningAlgValuesSupportedTest() {
        // TODO: test requestObjectSigningAlgValuesSupported
    }

    /**
     * Test the property 'requestParameterSupported'
     */
    @Test
    void requestParameterSupportedTest() {
        // TODO: test requestParameterSupported
    }

    /**
     * Test the property 'requestUriParameterSupported'
     */
    @Test
    void requestUriParameterSupportedTest() {
        // TODO: test requestUriParameterSupported
    }

    /**
     * Test the property 'requireRequestUriRegistration'
     */
    @Test
    void requireRequestUriRegistrationTest() {
        // TODO: test requireRequestUriRegistration
    }

    /**
     * Test the property 'responseModesSupported'
     */
    @Test
    void responseModesSupportedTest() {
        // TODO: test responseModesSupported
    }

    /**
     * Test the property 'responseTypesSupported'
     */
    @Test
    void responseTypesSupportedTest() {
        // TODO: test responseTypesSupported
    }

    /**
     * Test the property 'revocationEndpoint'
     */
    @Test
    void revocationEndpointTest() {
        // TODO: test revocationEndpoint
    }

    /**
     * Test the property 'scopesSupported'
     */
    @Test
    void scopesSupportedTest() {
        // TODO: test scopesSupported
    }

    /**
     * Test the property 'subjectTypesSupported'
     */
    @Test
    void subjectTypesSupportedTest() {
        // TODO: test subjectTypesSupported
    }

    /**
     * Test the property 'tokenEndpoint'
     */
    @Test
    void tokenEndpointTest() {
        // TODO: test tokenEndpoint
    }

    /**
     * Test the property 'tokenEndpointAuthMethodsSupported'
     */
    @Test
    void tokenEndpointAuthMethodsSupportedTest() {
        // TODO: test tokenEndpointAuthMethodsSupported
    }

    /**
     * Test the property 'userinfoEndpoint'
     */
    @Test
    void userinfoEndpointTest() {
        // TODO: test userinfoEndpoint
    }

    /**
     * Test the property 'userinfoSignedResponseAlg'
     */
    @Test
    void userinfoSignedResponseAlgTest() {
        // TODO: test userinfoSignedResponseAlg
    }

    /**
     * Test the property 'userinfoSigningAlgValuesSupported'
     */
    @Test
    void userinfoSigningAlgValuesSupportedTest() {
        // TODO: test userinfoSigningAlgValuesSupported
    }

}
