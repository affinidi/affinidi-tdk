openapi: 3.0.3
info:
  contact:
    email: info@affinidi.com
    name: Affinidi
    url: https://github.com/affinidi/affinidi-tdk
  license:
    name: Apache-2.0
    url: https://github.com/affinidi/affinidi-tdk/blob/main/LICENSE
  title: CredentialIssuanceService
  version: 1.0.0
externalDocs:
  description: Affinidi Documentation Website
  url: https://docs.affinidi.com/dev-tools/affinidi-tdk/clients/credential-issuance/
servers:
  - url: https://apse1.api.affinidi.io/cis
tags:
  - description: CORS Definitions
    name: cors
paths:
  /v1/{projectId}/.well-known/openid-credential-issuer:
    get:
      operationId: getWellKnownOpenIdCredentialIssuer
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownOpenIdCredentialIssuerResponse'
          description: Credential issuer Metadata and capabilities
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      security: []
      tags:
        - well-known
      x-accepts:
        - application/json
  /v1/{projectId}/offers/{issuanceId}:
    get:
      description:
        "Endpoint used to return Credential Offer details, used with `credential_offer_uri`\
        \ response"
      operationId: getCredentialOffer
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
        - description: issuanceId from credential_offer_uri
          explode: false
          in: path
          name: issuanceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/CredentialOfferResponse'
              schema:
                $ref: '#/components/schemas/CredentialOfferResponse'
          description: Ok
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCredentialOffer_400_response'
          description: BadRequestError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      security: []
      tags:
        - offer
      x-accepts:
        - application/json
  /v1/{projectId}/credential:
    post:
      description:
        Issue credential for end user upon presentation a valid access
        token. Since we don't immediate issue credential It's expected to return `transaction_id`
        and use this `transaction_id` to get the deferred credentials
      operationId: generateCredentials
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateCredential'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
          description: Ok
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generateCredentials_400_response'
          description: BadRequestError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJwtTokenError'
          description: UnauthorizedError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      security:
        - bearerAuth: []
      tags:
        - credentials
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/{projectId}/credential/issue:
    post:
      description:
        Endpoint to issue credentials directly without following OID4VCI
        flow
      operationId: issueCredentials
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/StartIssuance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
          description: Ok
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJwtTokenError'
          description: UnauthorizedError
      security:
        - ProjectTokenAuth: []
      tags:
        - issuance
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/{projectId}/issuance/start:
    post:
      description: Endpoint used b websites to start the issuance process
      operationId: startIssuance
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/StartIssuance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartIssuanceResponse'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startIssuance_400_response'
          description: BadRequestError
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionForbiddenError'
          description: ForbiddenError
      security:
        - ProjectTokenAuth: []
      tags:
        - issuance
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/{projectId}/issuance/state/{issuanceId}:
    get:
      description: Get issuance status
      operationId: issuanceState
      parameters:
        - explode: false
          in: path
          name: issuanceId
          required: true
          schema:
            type: string
          style: simple
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuanceStateResponse'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionForbiddenError'
          description: ForbiddenError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      tags:
        - issuance
      x-accepts:
        - application/json
  /v1/{projectId}/issuance:
    get:
      description: List all issuances for Project
      operationId: listIssuance
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIssuanceResponse'
          description: Ok
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionForbiddenError'
          description: ForbiddenError
      security:
        - ProjectTokenAuth: []
      tags:
        - issuance
      x-accepts:
        - application/json
  /v1/configurations:
    get:
      description: Get issuance configuration for my selected project
      operationId: getIssuanceConfigList
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuanceConfigListResponse'
          description: Ok
      security:
        - ProjectTokenAuth: []
      tags:
        - configuration
      x-accepts:
        - application/json
    post:
      description: 'Create issuance configuration, project have only one configuration'
      operationId: createIssuanceConfig
      requestBody:
        $ref: '#/components/requestBodies/CreateIssuanceConfig'
      responses:
        '201':
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/IssuanceConfigDto'
              schema:
                $ref: '#/components/schemas/IssuanceConfigDto'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createIssuanceConfig_400_response'
          description: BadRequestError
      security:
        - ProjectTokenAuth: []
      tags:
        - configuration
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/configurations/{configurationId}:
    delete:
      description: Delete project issuance configuration
      operationId: deleteIssuanceConfigById
      parameters:
        - description: The id of the issuance configuration
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: Response for deleting the config
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      tags:
        - configuration
      x-accepts:
        - application/json
    get:
      description: Get issuance configuration by id
      operationId: getIssuanceConfigById
      parameters:
        - description: The id of the issuance configuration
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/IssuanceConfigDto'
              schema:
                $ref: '#/components/schemas/IssuanceConfigDto'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      tags:
        - configuration
      x-accepts:
        - application/json
    put:
      description: Update issuance configuration
      operationId: updateIssuanceConfigById
      parameters:
        - description: The id of the issuance configuration
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateIssuanceConfig'
      responses:
        '200':
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/IssuanceConfigDto'
              schema:
                $ref: '#/components/schemas/IssuanceConfigDto'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      tags:
        - configuration
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/{projectId}/configurations/{configurationId}/issuance/issuance-data-records:
    get:
      description: Retrieve a list of issuance data records.
      operationId: listIssuanceDataRecords
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
        - description: The id of the issuance configuration
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
        - description: Maximum number of records to fetch in a list
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 10
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: exclusiveStartKey for retrieving the next batch of data.
          explode: true
          in: query
          name: exclusiveStartKey
          required: false
          schema:
            maxLength: 3000
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIssuanceRecordResponse'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      summary: List records
      tags: []
      x-accepts:
        - application/json
  /v1/{projectId}/configurations/{configurationId}/issuance/change-status:
    post:
      description: change credential status.
      operationId: changeCredentialStatus
      parameters:
        - description: project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
        - description: configuration id
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/ChangeCredentialStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowData'
          description: updated credential entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeCredentialStatus_400_response'
          description: BadRequestError
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
      security:
        - ProjectTokenAuth: []
      summary: change credential status.
      tags: []
      x-content-type: application/json
      x-accepts:
        - application/json
  /v1/{projectId}/configurations/{configurationId}/issuances/{issuanceId}/credentials:
    get:
      description: Get claimed VC linked to the issuanceId
      operationId: getIssuanceIdClaimedCredential
      parameters:
        - description: project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
        - description: configuration id
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
        - description: issuance id
          explode: false
          in: path
          name: issuanceId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimedCredentialResponse'
          description: Ok
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      security:
        - ProjectTokenAuth: []
      summary: Get claimed VC linked to the issuanceId
      tags:
        - credentials
      x-accepts:
        - application/json
  /v1/{projectId}/configurations/{configurationId}/credentials:
    get:
      description: Get claimed credential in the specified range
      operationId: getClaimedCredentials
      parameters:
        - description: project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
        - description: configuration id
          explode: false
          in: path
          name: configurationId
          required: true
          schema:
            type: string
          style: simple
        - explode: true
          in: query
          name: rangeStartTime
          required: true
          schema:
            type: string
          style: form
        - explode: true
          in: query
          name: rangeEndTime
          required: false
          schema:
            type: string
          style: form
        - description: exclusiveStartKey for retrieving the next batch of data.
          explode: true
          in: query
          name: exclusiveStartKey
          required: false
          schema:
            maxLength: 3000
            type: string
          style: form
        - explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 20
            maximum: 20
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimedCredentialListResponse'
          description: Ok
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterError'
          description: BadRequestError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: NotFoundError
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      security:
        - ProjectTokenAuth: []
      summary: Get claimed credential in the specified range
      tags:
        - credentials
      x-accepts:
        - application/json
  /v1/{projectId}/batch_credential:
    post:
      description:
        "Allows wallet's to claim multiple credentials at once, For authentication\
        \ it use token from  authorization server (hydra),and token is validated internally\
        \ in th function"
      operationId: batchCredential
      parameters:
        - description: Affinidi project id
          explode: false
          in: path
          name: projectId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/BatchCredential'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCredentialResponse'
          description: Ok
      security:
        - bearerAuth: []
      summary: Batch credential
      tags:
        - credentials
      x-content-type: application/json
      x-accepts:
        - application/json
components:
  examples:
    CredentialOfferResponse:
      value:
        credential_issuer: https://affinidi.io/dev/cis/v1/
        credential_configuration_ids:
          - UniversityDegree2024
        grants:
          urn:ietf:params:oauth:grant-type:pre-authorized_code:
            pre-authorized_code: ..
            tx_code:
              length: 4
              input_mode: numeric
              description: Please provide the one-time code that was sent via e-mail
    CreateCredentialInput:
      value:
        credential_identifier: UniversityDegree2024
        proof:
          proof_type: jwt
          jwt: eyJ0eXA.....dsdfrwf
    IssuanceConfigDto:
      value:
        id: string
        issuerDid: did:key:issuer-did-value
        issuerWalletId: 1234-xyz
        credentialOfferDuration: 600
        cNonceDuration: 600
        format: ldp_vc
        issuerUri: https://xyz.issuance.affinidi.io
        credentialSupported:
          - credentialTypeId: UniversityDegree2024
            jsonLdContextUrl: https://schema.affinidi.io/UniversityDegreeV1R1.jsonld
            jsonSchemaUrl: https://schema.affinidi.io/UniversityDiplomaV1R1.json
        issuerMetadata: {}
        returnUris: []
        version: 1
    CreateIssuanceConfigInput:
      value:
        issuerWalletId: 1234-xyz
        credentialOfferDuration: 600
        format: ldp_vc
        issuerUri: https://xyz.issuance.affinidi.io
        credentialSupported:
          - credentialTypeId: UniversityDegree2024
            jsonLdContextUrl: https://schema.affinidi.io/UniversityDegreeV1R1.jsonld
            jsonSchemaUrl: https://schema.affinidi.io/UniversityDiplomaV1R1.json
        issuerMetadata: {}
        returnUris: []
  headers:
    Access-Control-Allow-Origin:
      explode: false
      schema:
        type: string
      style: simple
    Access-Control-Allow-Methods:
      explode: false
      schema:
        type: string
      style: simple
    Access-Control-Allow-Headers:
      explode: false
      schema:
        type: string
      style: simple
  requestBodies:
    StartIssuance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StartIssuanceInput'
      description: Request body to start issuance
      required: true
    CreateCredential:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/CreateCredentialInput'
          schema:
            $ref: '#/components/schemas/CreateCredentialInput'
      description: Request body to issue credentials
      required: true
    DeferredCredential:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeferredCredentialInput'
      description: Request body of deferred credentials
      required: true
    CreateIssuanceConfig:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/CreateIssuanceConfigInput'
          schema:
            $ref: '#/components/schemas/CreateIssuanceConfigInput'
      description: Request body of create configuration
      required: true
    UpdateIssuanceConfig:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIssuanceConfigInput'
      description: Request body of update configuration
      required: true
    ChangeCredentialStatus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeCredentialStatusInput'
      description: Request body for changing credential status
      required: true
    BatchCredential:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchCredentialInput'
      description: Request body for batch credential
      required: true
  responses:
    GetIssuanceConfigListResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuanceConfigListResponse'
      description: Ok
    CredentialOfferOk:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/CredentialOfferResponse'
          schema:
            $ref: '#/components/schemas/CredentialOfferResponse'
      description: Ok
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CredentialResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialResponse'
      description: Ok
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    BatchCredentialOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchCredentialResponse'
      description: Ok
    StartIssuanceOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StartIssuanceResponse'
      description: Ok
    IssuanceStateResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuanceStateResponse'
      description: Ok
    UpdateIssuanceConfigResponseOk:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/IssuanceConfigDto'
          schema:
            $ref: '#/components/schemas/IssuanceConfigDto'
      description: Ok
    CreateIssuanceConfigResponseOk:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/IssuanceConfigDto'
          schema:
            $ref: '#/components/schemas/IssuanceConfigDto'
      description: Ok
    GetIssuanceConfigByIdResponseOk:
      content:
        application/json:
          examples:
            default:
              $ref: '#/components/examples/IssuanceConfigDto'
          schema:
            $ref: '#/components/schemas/IssuanceConfigDto'
      description: Ok
    ListIssuanceDataRecordsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListIssuanceRecordResponse'
      description: Ok
    ChangeCredentialStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FlowData'
      description: updated credential entity
    GetWellKnownOpenIdCredentialIssuerOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WellKnownOpenIdCredentialIssuerResponse'
      description: Credential issuer Metadata and capabilities
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    ListIssuanceResponseOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListIssuanceResponse'
      description: Ok
    GetIssuanceIdClaimedCredentialOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClaimedCredentialResponse'
      description: Ok
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GetClaimedCredentialsOk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClaimedCredentialListResponse'
      description: Ok
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CorsGetWellKnownOpenIdCredentialIssuerOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorsGetWellKnownOpenIdCredentialIssuerOK'
      description: CorsGetWellKnownOpenIdCredentialIssuerOK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CorsGetCredentialOfferOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorsGetCredentialOfferOK'
      description: CorsGetCredentialOfferOK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CorsGenerateCredentialsOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorsGenerateCredentialsOK'
      description: CorsGenerateCredentialsOK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CorsGetIssuanceIdClaimedCredentialOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorsGetIssuanceIdClaimedCredentialOK'
      description: CorsGetIssuanceIdClaimedCredentialOK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    CorsGetClaimedCredentialsOK:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorsGetClaimedCredentialsOK'
      description: CorsGetClaimedCredentialsOK
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GetCredentialOfferBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getCredentialOffer_400_response'
      description: BadRequestError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GenerateCredentialsBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/generateCredentials_400_response'
      description: BadRequestError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GenerateCredentialsUnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidJwtTokenError'
      description: UnauthorizedError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    IssueCredentialsUnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidJwtTokenError'
      description: UnauthorizedError
    StartIssuanceBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/startIssuance_400_response'
      description: BadRequestError
    StartIssuanceForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
      description: ForbiddenError
    IssuanceStateBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
    IssuanceStateForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
      description: ForbiddenError
    IssuanceStateNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    ListIssuanceForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionForbiddenError'
      description: ForbiddenError
    CreateIssuanceConfigBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createIssuanceConfig_400_response'
      description: BadRequestError
    GetIssuanceConfigByIdBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
    GetIssuanceConfigByIdNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    UpdateIssuanceConfigByIdBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
    UpdateIssuanceConfigByIdNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    DeleteIssuanceConfigByIdBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
    DeleteIssuanceConfigByIdNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    ListIssuanceDataRecordsBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
    ListIssuanceDataRecordsNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    ChangeCredentialStatusBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/changeCredentialStatus_400_response'
      description: BadRequestError
    ChangeCredentialStatusNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
    GetIssuanceIdClaimedCredentialBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GetIssuanceIdClaimedCredentialNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GetClaimedCredentialsBadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidParameterError'
      description: BadRequestError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
    GetClaimedCredentialsNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
      description: NotFoundError
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Allow-Methods:
          $ref: '#/components/headers/Access-Control-Allow-Methods'
        Access-Control-Allow-Headers:
          $ref: '#/components/headers/Access-Control-Allow-Headers'
  schemas:
    StartIssuanceInput:
      additionalProperties: false
      example:
        data:
          - metaData:
              expirationDate: 2000-01-23T04:56:07.000+00:00
            credentialTypeId: credentialTypeId
            statusListDetails:
              - standard: RevocationList2020
                purpose: REVOCABLE
              - standard: RevocationList2020
                purpose: REVOCABLE
            credentialData:
              key: ''
          - metaData:
              expirationDate: 2000-01-23T04:56:07.000+00:00
            credentialTypeId: credentialTypeId
            statusListDetails:
              - standard: RevocationList2020
                purpose: REVOCABLE
              - standard: RevocationList2020
                purpose: REVOCABLE
            credentialData:
              key: ''
        issuanceId: issuanceId
        holderDid: holderDid
        claimMode: NORMAL
      properties:
        claimMode:
          description:
            "In TX_CODE claim mode, additional transaction code will be\
            \ generated and the Authorization Server expects presentation of the transaction\
            \ Code by the end-user. If FIXED_HOLDER claim mode is defined, holderDid\
            \ must be present and service will not generate additional transaction\
            \ code (NORMAL claimMode is deprecated)."
          enum:
            - NORMAL
            - TX_CODE
            - FIXED_HOLDER
          type: string
        holderDid:
          description: Holder DID
          pattern: ^did:.+$
          type: string
        issuanceId:
          description:
            "Website's internal identifier. Website may use to get info\
            \ about the status of issuance flow. If it is not provided, CIS will generate\
            \ one."
          type: string
        data:
          items:
            $ref: '#/components/schemas/StartIssuanceInput_data_inner'
          type: array
      required:
        - data
      type: object
    CredentialProof:
      additionalProperties: false
      description:
        Object containing the proof of possession of the cryptographic
        key material the issued Credential would be bound to.
      example:
        proof_type: jwt
        jwt: jwt
      properties:
        proof_type:
          description: String denoting the key proof type.
          enum:
            - jwt
          type: string
        jwt:
          type: string
      required:
        - jwt
        - proof_type
      type: object
    FlowData:
      additionalProperties: false
      example:
        walletId: walletId
        credentialTypeId: credentialTypeId
        jsonLdContextUrl: jsonLdContextUrl
        modifiedAt: modifiedAt
        projectIdConfigurationId: projectIdConfigurationId
        createdAt: createdAt
        statusListsDetails:
          - standard: RevocationList2020
            statusListId: statusListId
            statusActivatedAt: statusActivatedAt
            statusListPurpose: REVOKED
            statusListIndex: statusListIndex
            isActive: true
            statusActivationReason: statusActivationReason
          - standard: RevocationList2020
            statusListId: statusListId
            statusActivatedAt: statusActivatedAt
            statusListPurpose: REVOKED
            statusListIndex: statusListIndex
            isActive: true
            statusActivationReason: statusActivationReason
        projectIdConfigurationIdWalletId: projectIdConfigurationIdWalletId
        id: id
        configurationId: configurationId
        issuedAt: issuedAt
        projectId: projectId
        flowId: flowId
        jsonSchemaUrl: jsonSchemaUrl
        projectIdConfigurationIdCredentialType: projectIdConfigurationIdCredentialType
      properties:
        createdAt:
          description: '[GEN] ISO 8601 string of the creation date/time the entity'
          type: string
        modifiedAt:
          description: '[GEN] ISO 8601 string of the modification date/time the entity'
          type: string
        id:
          type: string
        projectId:
          type: string
        flowId:
          type: string
        credentialTypeId:
          type: string
        jsonLdContextUrl:
          type: string
        jsonSchemaUrl:
          type: string
        configurationId:
          description: 'Id of configuration, used to issue VC.'
          type: string
        issuedAt:
          description:
            when credential was issued to the holder (holder invoked generateCredentials
            endpoint)
          type: string
        walletId:
          description: 'Id of wallet, used to issue VC.'
          type: string
        projectIdConfigurationId:
          description:
            "Id of configuration with which VC was issued. To use as an\
            \ index, it is grouped together with projectId, as \"{projectIdConfigurationId}#{configurationId}\""
          type: string
        projectIdConfigurationIdWalletId:
          description:
            "Id of wallet which issued VC. To use as an index, it is grouped\
            \ together with projectId, as \"{projectIdConfigurationId}#{walletId}\""
          type: string
        projectIdConfigurationIdCredentialType:
          description:
            "VC.type value. To use as an index, it is grouped together\
            \ with projectId, as \"{projectIdConfigurationId}#{credentialType}\""
          type: string
        statusListsDetails:
          items:
            $ref: '#/components/schemas/FlowData_statusListsDetails_inner'
          type: array
      required:
        - createdAt
        - credentialTypeId
        - flowId
        - id
        - jsonLdContextUrl
        - jsonSchemaUrl
        - modifiedAt
      type: object
    CreateCredentialInput:
      additionalProperties: true
      example:
        credential_identifier: credential_identifier
        proof:
          proof_type: jwt
          jwt: jwt
      properties:
        credential_identifier:
          description:
            It is a String that identifies a Credential that is being requested
            to be issued.
          type: string
        proof:
          $ref: '#/components/schemas/CredentialProof'
      required:
        - proof
      type: object
    ChangeCredentialStatusInput:
      additionalProperties: false
      example:
        changeReason: INVALID_CREDENTIAL
        issuanceRecordId: issuanceRecordId
      properties:
        changeReason:
          description: reason for revocation
          enum:
            - INVALID_CREDENTIAL
            - COMPROMISED_ISSUER
          type: string
        issuanceRecordId:
          nullable: false
          type: string
      type: object
    BatchCredentialInput:
      additionalProperties: false
      example:
        credential_requests:
          - credential_identifier: credential_identifier
            proof:
              proof_type: jwt
              jwt: jwt
          - credential_identifier: credential_identifier
            proof:
              proof_type: jwt
              jwt: jwt
      properties:
        credential_requests:
          description: Array that contains Credential Request objects.
          items:
            $ref: '#/components/schemas/BatchCredentialInput_credential_requests_inner'
          type: array
      required:
        - credential_requests
      type: object
    StartIssuanceResponse:
      additionalProperties: false
      example:
        expiresIn: 0.8008281904610115
        issuanceId: issuanceId
        txCode: txCode
        credentialOfferUri: credentialOfferUri
      properties:
        credentialOfferUri:
          description: URL where wallet can view offer details
          type: string
        txCode:
          description: One time transaction code generated by CIS
          type: string
        issuanceId:
          description:
            "Website's internal identifier. Website may use to get info\
            \ about the status of issuance flow. If it is not provided, CIS will generate\
            \ one."
          type: string
        expiresIn:
          description: Expire time in seconds
          type: number
      required:
        - credentialOfferUri
        - expiresIn
        - issuanceId
      type: object
    IssuanceStateResponse:
      additionalProperties: false
      example:
        issuanceId: issuanceId
        status: INIT
      properties:
        issuanceId:
          description:
            "Website's internal identifier. Website may use to get info\
            \ about the status of issuance flow. If it is not provided, CIS will generate\
            \ one."
          type: string
        status:
          description: String describing the status of the issuance
          enum:
            - INIT
            - OFFER_DELIVERED
            - VC_CLAIMED
            - TIMEOUT
          type: string
      required:
        - issuanceId
        - status
      type: object
    ListIssuanceResponse:
      additionalProperties: false
      example:
        issuances:
          - id: id
          - id: id
      properties:
        issuances:
          description: The list of all issuances for the Project
          items:
            $ref: '#/components/schemas/ListIssuanceResponse_issuances_inner'
          type: array
      required:
        - issuances
      type: object
    ClaimedCredentialResponse:
      additionalProperties: false
      description: Response for getting the claimed VC
      example:
        credential:
          key: ''
      properties:
        credential:
          additionalProperties: true
          description: claimed credential
          type: object
      type: object
    ClaimedCredentialListResponse:
      additionalProperties: false
      description: List of claimed credential
      example:
        credentials:
          - key: ''
          - key: ''
        lastEvaluatedKey: lastEvaluatedKey
      properties:
        credentials:
          description: list of credentials
          items:
            additionalProperties: true
            description: claimed credential
            type: object
          type: array
        lastEvaluatedKey:
          description: for pagination to fetch next set of records
          type: string
      type: object
    ListIssuanceRecordResponse:
      additionalProperties: false
      description: list of issuance data records
      example:
        flowData:
          - walletId: walletId
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            modifiedAt: modifiedAt
            projectIdConfigurationId: projectIdConfigurationId
            createdAt: createdAt
            statusListsDetails:
              - standard: RevocationList2020
                statusListId: statusListId
                statusActivatedAt: statusActivatedAt
                statusListPurpose: REVOKED
                statusListIndex: statusListIndex
                isActive: true
                statusActivationReason: statusActivationReason
              - standard: RevocationList2020
                statusListId: statusListId
                statusActivatedAt: statusActivatedAt
                statusListPurpose: REVOKED
                statusListIndex: statusListIndex
                isActive: true
                statusActivationReason: statusActivationReason
            projectIdConfigurationIdWalletId: projectIdConfigurationIdWalletId
            id: id
            configurationId: configurationId
            issuedAt: issuedAt
            projectId: projectId
            flowId: flowId
            jsonSchemaUrl: jsonSchemaUrl
            projectIdConfigurationIdCredentialType: projectIdConfigurationIdCredentialType
          - walletId: walletId
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            modifiedAt: modifiedAt
            projectIdConfigurationId: projectIdConfigurationId
            createdAt: createdAt
            statusListsDetails:
              - standard: RevocationList2020
                statusListId: statusListId
                statusActivatedAt: statusActivatedAt
                statusListPurpose: REVOKED
                statusListIndex: statusListIndex
                isActive: true
                statusActivationReason: statusActivationReason
              - standard: RevocationList2020
                statusListId: statusListId
                statusActivatedAt: statusActivatedAt
                statusListPurpose: REVOKED
                statusListIndex: statusListIndex
                isActive: true
                statusActivationReason: statusActivationReason
            projectIdConfigurationIdWalletId: projectIdConfigurationIdWalletId
            id: id
            configurationId: configurationId
            issuedAt: issuedAt
            projectId: projectId
            flowId: flowId
            jsonSchemaUrl: jsonSchemaUrl
            projectIdConfigurationIdCredentialType: projectIdConfigurationIdCredentialType
        lastEvaluatedKey: lastEvaluatedKey
      properties:
        flowData:
          items:
            $ref: '#/components/schemas/FlowData'
          type: array
        lastEvaluatedKey:
          type: string
      type: object
    CredentialResponseImmediate:
      additionalProperties: false
      example:
        c_nonce_expires_in: 0.8008281904610115
        credential:
          key: ''
        c_nonce: c_nonce
      properties:
        credential:
          $ref: '#/components/schemas/CredentialResponseImmediate_credential'
        c_nonce:
          description:
            String containing a nonce to be used when creating a proof
            of possession of the key proof
          type: string
        c_nonce_expires_in:
          $ref: '#/components/schemas/CredentialResponseImmediate_c_nonce_expires_in'
      required:
        - c_nonce
        - c_nonce_expires_in
        - credential
      type: object
    CredentialResponseDeferred:
      additionalProperties: false
      properties:
        transaction_id:
          description:
            String identifying a Deferred Issuance transaction. This claim
            is contained in the response if the Credential Issuer was unable to immediately
            issue the Credential.
          type: string
        c_nonce:
          description:
            String containing a nonce to be used when creating a proof
            of possession of the key proof
          type: string
        c_nonce_expires_in:
          description: Lifetime in seconds of the c_nonce
          type: number
      required:
        - c_nonce
        - c_nonce_expires_in
        - transaction_id
      type: object
    CredentialResponse:
      oneOf:
        - $ref: '#/components/schemas/CredentialResponseImmediate'
        - $ref: '#/components/schemas/CredentialResponseDeferred'
    BatchCredentialResponse:
      additionalProperties: false
      example:
        c_nonce_expires_in: 0
        c_nonce: c_nonce
        credential_responses:
          - credential: ''
          - credential: ''
      properties:
        credential_responses:
          items:
            $ref: '#/components/schemas/BatchCredentialResponse_credential_responses_inner'
          type: array
        c_nonce:
          type: string
        c_nonce_expires_in:
          description: Expiration time in seconds
          type: integer
      required:
        - credential_responses
      type: object
    DeferredCredentialResponse:
      $ref: '#/components/schemas/CredentialResponseImmediate'
    DeferredCredentialInput:
      additionalProperties: false
      properties:
        transaction_id:
          description:
            String identifying a Deferred Issuance transaction. This claim
            is contained in the response if the Credential Issuer was unable to immediately
            issue the Credential.
          type: string
      required:
        - transaction_id
      type: object
    CreateIssuanceConfigInput:
      additionalProperties: false
      example:
        returnUris:
          - returnUris
          - returnUris
        webhook:
          endpoint:
            url: url
          enabled: false
        issuerWalletId: issuerWalletId
        credentialOfferDuration: 48435.08895908198
        name: name
        format: ldp_vc
        description: description
        issuerMetadata:
          key: ''
        credentialSupported:
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
      properties:
        name:
          pattern: ^(?!\s*$).+
          type: string
        description:
          type: string
        issuerWalletId:
          description: Issuer Wallet id
          type: string
        credentialOfferDuration:
          description: credential offer duration in second
          maximum: 604801
          minimum: 1
          multipleOf: 1
          type: number
        format:
          description:
            "String identifying the format of this Credential, i.e., ldp_vc.\
            \ Depending on the format value, the object contains further elements\
            \ defining the type"
          enum:
            - ldp_vc
            - jwt_vc_json-ld
            - sd_jwt_vc_json-ld
          type: string
        credentialSupported:
          items:
            $ref: '#/components/schemas/CredentialSupportedObject'
          type: array
        issuerMetadata:
          additionalProperties: true
          description:
            Issuer public information wallet may want to show to user during
            consent confirmation
          type: object
        returnUris:
          description: List of allowed URIs to be returned to after issuance
          items:
            type: string
          type: array
        webhook:
          $ref: '#/components/schemas/CisConfigurationWebhookSetting'
      required:
        - credentialSupported
        - issuerWalletId
      type: object
    CredentialSupportedObject:
      additionalProperties: false
      example:
        metadata:
          display:
            - backgroundColor: backgroundColor
              name: name
              logo:
                altText: altText
                url: url
              locale: locale
              textColor: textColor
            - backgroundColor: backgroundColor
              name: name
              logo:
                altText: altText
                url: url
              locale: locale
              textColor: textColor
        credentialTypeId: credentialTypeId
        jsonLdContextUrl: jsonLdContextUrl
        jsonSchemaUrl: jsonSchemaUrl
      properties:
        credentialTypeId:
          description:
            It is a String that identifies a Credential that is being requested
            to be issued.
          type: string
        jsonSchemaUrl:
          description: credential jsonLdContextUrl
          pattern: ^https:\/\/(.+)\.json$
          type: string
        jsonLdContextUrl:
          description: credential jsonSchemaUrl
          pattern: ^https:\/\/(.+)\.jsonld$
          type: string
        metadata:
          $ref: '#/components/schemas/SupportedCredentialMetadata'
      required:
        - credentialTypeId
        - jsonLdContextUrl
        - jsonSchemaUrl
      type: object
    SupportedCredentialMetadata:
      additionalProperties: true
      example:
        display:
          - backgroundColor: backgroundColor
            name: name
            logo:
              altText: altText
              url: url
            locale: locale
            textColor: textColor
          - backgroundColor: backgroundColor
            name: name
            logo:
              altText: altText
              url: url
            locale: locale
            textColor: textColor
      properties:
        display:
          items:
            $ref: '#/components/schemas/SupportedCredentialMetadata_display_inner'
          type: array
      type: object
    UpdateIssuanceConfigInput:
      additionalProperties: false
      example:
        issuerUri: issuerUri
        returnUris:
          - returnUris
          - returnUris
        webhook:
          endpoint:
            url: url
          enabled: false
        issuerWalletId: issuerWalletId
        credentialOfferDuration: 48435.08895908198
        name: name
        format: ldp_vc
        description: description
        issuerMetadata:
          key: ''
        credentialSupported:
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
      properties:
        name:
          pattern: ^(?!\s*$).+
          type: string
        description:
          type: string
        issuerWalletId:
          description: Issuer Wallet id
          type: string
        credentialOfferDuration:
          description: credential offer duration in second
          maximum: 604801
          minimum: 1
          multipleOf: 1
          type: number
        format:
          description:
            "String identifying the format of this Credential, i.e., ldp_vc.\
            \ Depending on the format value, the object contains further elements\
            \ defining the type"
          enum:
            - ldp_vc
            - jwt_vc_json-ld
            - sd_jwt_vc_json-ld
          type: string
        issuerUri:
          description: Issuer URI
          type: string
        credentialSupported:
          items:
            $ref: '#/components/schemas/CredentialSupportedObject'
          type: array
        issuerMetadata:
          additionalProperties: true
          description:
            Issuer public information wallet may want to show to user during
            consent confirmation
          type: object
        returnUris:
          description: List of allowed URIs to be returned to after issuance
          items:
            type: string
          type: array
        webhook:
          $ref: '#/components/schemas/CisConfigurationWebhookSetting'
      type: object
    CredentialOfferResponse:
      additionalProperties: false
      example:
        grants:
          urn:ietf:params:oauth:grant-type:pre-authorized_code:
            pre-authorized_code: pre-authorized_code
            tx_code:
              length: 0.8008281904610115
              description: description
              input_mode: input_mode
        credential_configuration_ids:
          - credential_configuration_ids
          - credential_configuration_ids
        credential_issuer: credential_issuer
      properties:
        credential_issuer:
          description: The URL of the Credential Issuer
          type: string
        credential_configuration_ids:
          description:
            Array of unique strings that each identify one of the keys
            in the name/value pairs stored in the credentialSupported
          items:
            type: string
          type: array
        grants:
          $ref: '#/components/schemas/CredentialOfferResponse_grants'
      required:
        - credential_configuration_ids
        - credential_issuer
        - grants
      type: object
    IssuanceConfigMiniDto:
      additionalProperties: false
      example:
        cNonceDuration: 6.027456183070403
        issuerUri: issuerUri
        issuerWalletId: issuerWalletId
        credentialOfferDuration: 0.8008281904610115
        issuerDid: issuerDid
        name: name
        format: ldp_vc
        issuerMetadata:
          key: ''
        id: id
        version: 1.4658129805029452
      properties:
        id:
          type: string
        name:
          type: string
        issuerDid:
          description: Issuer DID
          type: string
        issuerWalletId:
          description: Issuer Wallet id
          type: string
        credentialOfferDuration:
          description: credential offer duration in second
          type: number
        cNonceDuration:
          description: c_nonce duration in second
          type: number
        format:
          description:
            "String identifying the format of this Credential, i.e., jwt_vc_json-ld\
            \ or ldp_vc. Depending on the format value, the object contains further\
            \ elements defining the type"
          enum:
            - ldp_vc
            - jwt_vc_json-ld
            - sd_jwt_vc_json-ld
          type: string
        issuerUri:
          description: Issuer URI
          type: string
        issuerMetadata:
          additionalProperties: true
          description:
            Issuer public information wallet may want to show to user during
            consent confirmation
          type: object
        version:
          type: number
      required:
        - id
      type: object
    IssuanceConfigDto:
      additionalProperties: false
      example:
        cNonceDuration: 6.027456183070403
        issuerUri: issuerUri
        returnUris:
          - returnUris
          - returnUris
        webhook:
          endpoint:
            url: url
          enabled: false
        issuerWalletId: issuerWalletId
        credentialOfferDuration: 0.8008281904610115
        format: ldp_vc
        description: description
        issuerMetadata:
          key: ''
        credentialSupported:
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
          - metadata:
              display:
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
                - backgroundColor: backgroundColor
                  name: name
                  logo:
                    altText: altText
                    url: url
                  locale: locale
                  textColor: textColor
            credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
        version: 1.4658129805029452
        issuerDid: issuerDid
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        issuerDid:
          description: Issuer DID
          type: string
        issuerWalletId:
          description: Issuer Wallet id
          type: string
        credentialOfferDuration:
          description: credential offer duration in second
          type: number
        cNonceDuration:
          description: c_nonce duration in second
          type: number
        format:
          description:
            "String identifying the format of this Credential, i.e., jwt_vc_json-ld\
            \ or ldp_vc. Depending on the format value, the object contains further\
            \ elements defining the type"
          enum:
            - ldp_vc
            - jwt_vc_json-ld
            - sd_jwt_vc_json-ld
          type: string
        issuerUri:
          description: Issuer URI
          type: string
        credentialSupported:
          items:
            $ref: '#/components/schemas/CredentialSupportedObject'
          minItems: 1
          type: array
        issuerMetadata:
          additionalProperties: true
          description:
            Issuer public information wallet may want to show to user during
            consent confirmation
          type: object
        version:
          type: number
        returnUris:
          description: List of allowed URIs to be returned to after issuance
          items:
            type: string
          type: array
        webhook:
          $ref: '#/components/schemas/CisConfigurationWebhookSetting'
      type: object
    IssuanceConfigListResponse:
      additionalProperties: false
      example:
        configurations:
          - cNonceDuration: 6.027456183070403
            issuerUri: issuerUri
            issuerWalletId: issuerWalletId
            credentialOfferDuration: 0.8008281904610115
            issuerDid: issuerDid
            name: name
            format: ldp_vc
            issuerMetadata:
              key: ''
            id: id
            version: 1.4658129805029452
          - cNonceDuration: 6.027456183070403
            issuerUri: issuerUri
            issuerWalletId: issuerWalletId
            credentialOfferDuration: 0.8008281904610115
            issuerDid: issuerDid
            name: name
            format: ldp_vc
            issuerMetadata:
              key: ''
            id: id
            version: 1.4658129805029452
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/IssuanceConfigMiniDto'
          type: array
      required:
        - configurations
      type: object
    ActionForbiddenError:
      additionalProperties: false
      example:
        traceId: traceId
        name: ActionForbiddenError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: Principal can not execute action on given resource
        httpStatusCode: 6.027456183070403
      properties:
        name:
          enum:
            - ActionForbiddenError
          type: string
        message:
          enum:
            - Principal can not execute action on given resource
          type: string
        httpStatusCode:
          enum:
            - 403
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    NotFoundError:
      additionalProperties: false
      example:
        traceId: traceId
        name: NotFoundError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: 'Not found: ${param}.'
        httpStatusCode: 0.8008281904610115
      properties:
        name:
          enum:
            - NotFoundError
          type: string
        message:
          enum:
            - 'Not found: ${param}.'
          type: string
        httpStatusCode:
          enum:
            - 404
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    InvalidParameterError:
      additionalProperties: false
      example:
        traceId: traceId
        name: InvalidParameterError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: 'Invalid parameter: ${param}.'
        httpStatusCode: 6.027456183070403
      properties:
        name:
          enum:
            - InvalidParameterError
          type: string
        message:
          enum:
            - 'Invalid parameter: ${param}.'
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    WellKnownOpenIdCredentialIssuerResponse:
      additionalProperties: true
      example:
        credentials_supported:
          - credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
          - credentialTypeId: credentialTypeId
            jsonLdContextUrl: jsonLdContextUrl
            jsonSchemaUrl: jsonSchemaUrl
        credential_issuer: credential_issuer
        grant_types_supported:
          - authorization_code
          - authorization_code
        jwks_uri: jwks_uri
        token_endpoint_auth_methods_supported:
          - client_secret_post
          - client_secret_post
        scopes_supported:
          - openid
          - openid
        deferred_credential_endpoint: deferred_credential_endpoint
        authorization_endpoint: authorization_endpoint
        credential_endpoint: credential_endpoint
        token_endpoint: token_endpoint
      properties:
        authorization_endpoint:
          type: string
        credential_endpoint:
          type: string
        credential_issuer:
          type: string
        credentials_supported:
          items:
            $ref: '#/components/schemas/WellKnownOpenIdCredentialIssuerResponse_credentials_supported_inner'
          type: array
        deferred_credential_endpoint:
          type: string
        grant_types_supported:
          items:
            enum:
              - authorization_code
              - urn:ietf:params:oauth:grant-type:pre-authorized_code
            type: string
          type: array
        jwks_uri:
          type: string
        scopes_supported:
          items:
            enum:
              - openid
            type: string
          type: array
        token_endpoint:
          type: string
        token_endpoint_auth_methods_supported:
          items:
            enum:
              - client_secret_post
              - client_secret_basic
              - none
            type: string
          type: array
      type: object
    InvalidJwtTokenError:
      additionalProperties: false
      example:
        traceId: traceId
        name: InvalidJwtTokenError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: JWT token is invalid
        httpStatusCode: 1.4658129805029452
      properties:
        name:
          enum:
            - InvalidJwtTokenError
          type: string
        message:
          enum:
            - JWT token is invalid
          type: string
        httpStatusCode:
          enum:
            - 401
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    InvalidCredentialRequestError:
      additionalProperties: false
      example:
        traceId: traceId
        name: InvalidCredentialRequestError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: Credential Request is invalid
        httpStatusCode: 6.027456183070403
      properties:
        name:
          enum:
            - InvalidCredentialRequestError
          type: string
        message:
          enum:
            - Credential Request is invalid
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    InvalidProofError:
      additionalProperties: false
      properties:
        name:
          enum:
            - InvalidProofError
          type: string
        message:
          enum:
            - The proof in the Credential Request is invalid
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    InvalidCredentialTypeError:
      additionalProperties: false
      properties:
        name:
          enum:
            - InvalidCredentialTypeError
          type: string
        message:
          enum:
            - The requested credential type is not supported
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    ProjectCredentialConfigNotExistError:
      additionalProperties: false
      example:
        traceId: traceId
        name: ProjectCredentialConfigNotExistError
        details:
          - issue: issue
            field: field
            location: location
            value: value
          - issue: issue
            field: field
            location: location
            value: value
        message: Credential config is not available for the project
        httpStatusCode: 5.962133916683182
      properties:
        name:
          enum:
            - ProjectCredentialConfigNotExistError
          type: string
        message:
          enum:
            - Credential config is not available for the project
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    ProjectCredentialConfigExistError:
      additionalProperties: false
      properties:
        name:
          enum:
            - ProjectCredentialConfigExistError
          type: string
        message:
          enum:
            - "Credential config is exist for the project, one config is allowed for\
              \ each project"
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    CredentialSubjectNotValidError:
      additionalProperties: false
      properties:
        name:
          enum:
            - CredentialSubjectNotValidError
          type: string
        message:
          enum:
            - Credential subject is not according to the vc schema
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    CredentialIssuanceIdExistError:
      additionalProperties: false
      properties:
        name:
          enum:
            - CredentialIssuanceIdExistError
          type: string
        message:
          enum:
            - 'issuanceId exist for the project, please use different issuanceId'
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    CredentialOfferExpiredError:
      additionalProperties: false
      properties:
        name:
          enum:
            - CredentialOfferExpiredError
          type: string
        message:
          enum:
            - Credential offer is expired
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    InvalidIssuerWalletError:
      additionalProperties: false
      properties:
        name:
          enum:
            - InvalidIssuerWalletError
          type: string
        message:
          enum:
            - issuer wallet id is invalid
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    VcClaimedError:
      additionalProperties: false
      properties:
        name:
          enum:
            - VcClaimedError
          type: string
        message:
          enum:
            - The requested VC has already been claimed by the user
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    CorsGetWellKnownOpenIdCredentialIssuerOK:
      additionalProperties: false
      properties:
        corsGetWellKnownOpenIdCredentialIssuerOk:
          type: string
      type: object
    CorsGetCredentialOfferOK:
      additionalProperties: false
      properties:
        corsGetCredentialOfferOk:
          type: string
      type: object
    CorsGenerateCredentialsOK:
      additionalProperties: false
      properties:
        corsGenerateCredentialsOk:
          type: string
      type: object
    CredentialOfferClaimedError:
      additionalProperties: false
      properties:
        name:
          enum:
            - CredentialOfferClaimedError
          type: string
        message:
          enum:
            - Credential offer is already claimed
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    MissingHolderDidError:
      additionalProperties: false
      properties:
        name:
          enum:
            - MissingHolderDidError
          type: string
        message:
          enum:
            - holderDID is required in this claimMode
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    RevocationForbiddenError:
      additionalProperties: false
      properties:
        name:
          enum:
            - RevocationForbiddenError
          type: string
        message:
          enum:
            - Related VC has not been claimed yet
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    ChangeStatusForbiddenError:
      additionalProperties: false
      properties:
        name:
          enum:
            - ChangeStatusForbiddenError
          type: string
        message:
          enum:
            - Related VC status cannot be changed
          type: string
        httpStatusCode:
          enum:
            - 400
          type: number
        traceId:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ActionForbiddenError_details_inner'
          type: array
      required:
        - httpStatusCode
        - message
        - name
        - traceId
      type: object
    SupportedCredentialMetadataItemLogo:
      additionalProperties: true
      example:
        altText: altText
        url: url
      properties:
        url:
          type: string
        altText:
          type: string
      required:
        - url
      type: object
    CisConfigurationWebhookSetting:
      description: Webhook setting to notify developers for claimed VC
      example:
        endpoint:
          url: url
        enabled: false
      properties:
        enabled:
          default: false
          description: flag to enabled or disabled the webhook
          type: boolean
        endpoint:
          $ref: '#/components/schemas/CisConfigurationWebhookSetting_endpoint'
      required:
        - enabled
      type: object
    CorsGetIssuanceIdClaimedCredentialOK:
      additionalProperties: false
      properties:
        corsGetIssuanceIdClaimedCredentialOk:
          type: string
      type: object
    CorsGetClaimedCredentialsOK:
      additionalProperties: false
      properties:
        corsGetClaimedCredentialsOk:
          type: string
      type: object
    getCredentialOffer_400_response:
      oneOf:
        - $ref: '#/components/schemas/InvalidParameterError'
        - $ref: '#/components/schemas/ProjectCredentialConfigNotExistError'
        - $ref: '#/components/schemas/CredentialOfferExpiredError'
        - $ref: '#/components/schemas/CredentialOfferClaimedError'
        - $ref: '#/components/schemas/VcClaimedError'
    generateCredentials_400_response:
      oneOf:
        - $ref: '#/components/schemas/InvalidCredentialRequestError'
        - $ref: '#/components/schemas/InvalidProofError'
    startIssuance_400_response:
      oneOf:
        - $ref: '#/components/schemas/InvalidParameterError'
        - $ref: '#/components/schemas/InvalidCredentialTypeError'
        - $ref: '#/components/schemas/ProjectCredentialConfigNotExistError'
        - $ref: '#/components/schemas/CredentialSubjectNotValidError'
        - $ref: '#/components/schemas/CredentialIssuanceIdExistError'
        - $ref: '#/components/schemas/MissingHolderDidError'
    createIssuanceConfig_400_response:
      oneOf:
        - $ref: '#/components/schemas/ProjectCredentialConfigNotExistError'
        - $ref: '#/components/schemas/ProjectCredentialConfigExistError'
        - $ref: '#/components/schemas/InvalidIssuerWalletError'
    changeCredentialStatus_400_response:
      oneOf:
        - $ref: '#/components/schemas/InvalidParameterError'
        - $ref: '#/components/schemas/ChangeStatusForbiddenError'
    StartIssuanceInput_data_inner_statusListDetails_inner:
      additionalProperties: false
      example:
        standard: RevocationList2020
        purpose: REVOCABLE
      properties:
        purpose:
          enum:
            - REVOCABLE
          type: string
        standard:
          enum:
            - RevocationList2020
            - BitstringStatusListV1
          type: string
      required:
        - purpose
        - standard
      type: object
    StartIssuanceInput_data_inner_metaData:
      additionalProperties: false
      description:
        Object of metadata to be included in the additionalProperties related
        to vc
      example:
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        expirationDate:
          description: Date and time when the credential will expire
          format: date-time
          type: string
      required:
        - expirationDate
      type: object
    StartIssuanceInput_data_inner:
      additionalProperties: false
      description: Data to be included in issued credential
      example:
        metaData:
          expirationDate: 2000-01-23T04:56:07.000+00:00
        credentialTypeId: credentialTypeId
        statusListDetails:
          - standard: RevocationList2020
            purpose: REVOCABLE
          - standard: RevocationList2020
            purpose: REVOCABLE
        credentialData:
          key: ''
      properties:
        credentialTypeId:
          description:
            It is a String that identifies a Credential that is being requested
            to be issued.
          type: string
        credentialData:
          additionalProperties: true
          description:
            "Object of data to be included in the issued credential ,should\
            \  match the credential type"
          type: object
        statusListDetails:
          description:
            "Types of status lists to which the credential should be added\
            \ once issued. If not provided or empty, the credential is not added to\
            \ any of the status lists."
          items:
            $ref: '#/components/schemas/StartIssuanceInput_data_inner_statusListDetails_inner'
          type: array
        metaData:
          $ref: '#/components/schemas/StartIssuanceInput_data_inner_metaData'
      required:
        - credentialData
        - credentialTypeId
      type: object
    FlowData_statusListsDetails_inner:
      example:
        standard: RevocationList2020
        statusListId: statusListId
        statusActivatedAt: statusActivatedAt
        statusListPurpose: REVOKED
        statusListIndex: statusListIndex
        isActive: true
        statusActivationReason: statusActivationReason
      properties:
        statusListPurpose:
          description: Purpose of status list to which credential is added
          enum:
            - REVOKED
          type: string
        statusListId:
          description: id of status list
          type: string
        statusListIndex:
          description: 'as usual it is a number, but all standards use a string'
          type: string
        standard:
          enum:
            - RevocationList2020
            - BitstringStatusListV1
          type: string
        isActive:
          description: indicates status is true or not. Default false.
          type: boolean
        statusActivationReason:
          description: text reasoning why the status is true (if true). Optional.
          type: string
        statusActivatedAt:
          description: ISO 8601 string of the modification date/time the status. Optional.
          type: string
      required:
        - isActive
        - standard
        - statusListId
        - statusListIndex
        - statusListPurpose
      type: object
    BatchCredentialInput_credential_requests_inner:
      example:
        credential_identifier: credential_identifier
        proof:
          proof_type: jwt
          jwt: jwt
      properties:
        credential_identifier:
          description:
            It is a String that identifies a Credential that is being requested
            to be issued.
          type: string
        proof:
          $ref: '#/components/schemas/CredentialProof'
      required:
        - proof
      type: object
    ListIssuanceResponse_issuances_inner:
      example:
        id: id
      properties:
        id:
          description: issuance id
          type: string
      required:
        - id
      type: object
    CredentialResponseImmediate_credential:
      oneOf:
        - additionalProperties: true
          description:
            "Issued Credential, It can be a string or an object, depending\
            \ on the Credential format. default format  is `ldp_vc`."
          type: object
        - type: string
    CredentialResponseImmediate_c_nonce_expires_in:
      oneOf:
        - description: Lifetime in seconds of the c_nonce
          type: number
        - description: ISO Duration string (when VC format is JWT)
          type: string
    BatchCredentialResponse_credential_responses_inner:
      additionalProperties: false
      example:
        credential: ''
      properties:
        credential:
          description:
            "Issued Credential, It can be a string or an object, depending\
            \ on the Credential format. default format  is `ldp_vc`."
      required:
        - credential
      type: object
    SupportedCredentialMetadata_display_inner:
      additionalProperties: true
      example:
        backgroundColor: backgroundColor
        name: name
        logo:
          altText: altText
          url: url
        locale: locale
        textColor: textColor
      properties:
        name:
          maxLength: 64
          type: string
        locale:
          maxLength: 16
          type: string
        logo:
          $ref: '#/components/schemas/SupportedCredentialMetadataItemLogo'
        backgroundColor:
          type: string
        textColor:
          type: string
      required:
        - name
      type: object
    CredentialOfferResponse_grants_urn_ietf_params_oauth_grant_type_pre_authorized_code_tx_code:
      additionalProperties: false
      description:
        Object specifying whether the Authorization Server expects presentation
        of a Transaction Code by the End-User along with the Token Request in a Pre-Authorized
        Code Flow
      example:
        length: 0.8008281904610115
        description: description
        input_mode: input_mode
      properties:
        length:
          description: Integer specifying the length of the Transaction Code
          type: number
        input_mode:
          description:
            String specifying the input character set. Possible values
            are numeric (only digits) and text (any characters).
          type: string
        description:
          description:
            String containing guidance for the Holder of the Wallet on
            how to obtain the Transaction Code
          type: string
      type: object
    CredentialOfferResponse_grants_urn_ietf_params_oauth_grant_type_pre_authorized_code:
      additionalProperties: false
      description: Grant type for `pre-authorized_code` flow
      example:
        pre-authorized_code: pre-authorized_code
        tx_code:
          length: 0.8008281904610115
          description: description
          input_mode: input_mode
      properties:
        pre-authorized_code:
          description: pre authorized code to be exchanged with jwt token
          type: string
        tx_code:
          $ref: '#/components/schemas/CredentialOfferResponse_grants_urn_ietf_params_oauth_grant_type_pre_authorized_code_tx_code'
      required:
        - pre-authorized_code
      type: object
    CredentialOfferResponse_grants:
      additionalProperties: false
      description:
        Object indicating to the Wallet the Grant Types the Credential
        Issuer's Authorization Server is prepared to process for this Credential Offer.
      example:
        urn:ietf:params:oauth:grant-type:pre-authorized_code:
          pre-authorized_code: pre-authorized_code
          tx_code:
            length: 0.8008281904610115
            description: description
            input_mode: input_mode
      properties:
        urn:ietf:params:oauth:grant-type:pre-authorized_code:
          $ref: '#/components/schemas/CredentialOfferResponse_grants_urn_ietf_params_oauth_grant_type_pre_authorized_code'
      required:
        - urn:ietf:params:oauth:grant-type:pre-authorized_code
      type: object
    ActionForbiddenError_details_inner:
      additionalProperties: false
      example:
        issue: issue
        field: field
        location: location
        value: value
      properties:
        issue:
          type: string
        field:
          type: string
        value:
          type: string
        location:
          type: string
      required:
        - issue
      type: object
    WellKnownOpenIdCredentialIssuerResponse_credentials_supported_inner:
      additionalProperties: false
      example:
        credentialTypeId: credentialTypeId
        jsonLdContextUrl: jsonLdContextUrl
        jsonSchemaUrl: jsonSchemaUrl
      properties:
        credentialTypeId:
          description:
            It is a String that identifies a Credential that is being requested
            to be issued.
          type: string
        jsonSchemaUrl:
          description: credential jsonLdContextUrl
          type: string
        jsonLdContextUrl:
          description: credential jsonSchemaUrl
          type: string
      required:
        - credentialTypeId
        - jsonLdContextUrl
        - jsonSchemaUrl
      type: object
    CisConfigurationWebhookSetting_endpoint:
      example:
        url: url
      properties:
        url:
          description:
            url endpoint where notification will be sent with issuanceId
            after user has claimed the VC related to issuanceId
          type: string
      type: object
  securitySchemes:
    AwsSigV4:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
    ApiKey:
      in: header
      name: x-api-key
      type: apiKey
      x-amazon-apigateway-api-key-source: HEADER
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    ConsumerTokenAuth:
      in: header
      name: authorization
      type: apiKey
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:792104784284:function:iam-dev-ConsumerTokenAuthorizerLambda91B1796B-QT4lOBGrUdPH:live-alias/invocations
        authorizerResultTtlInSeconds: 0
    UserTokenAuth:
      in: header
      name: authorization
      type: apiKey
    ProjectTokenAuth:
      in: header
      name: authorization
      type: apiKey
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:792104784284:function:iam-dev-ProjectTokenAuthorizerC83BEF45-elvJgVdbp078:live-alias/invocations
        authorizerResultTtlInSeconds: 0
    HeritageTokenAuth:
      in: header
      name: authorization
      type: apiKey
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:792104784284:function:iam-dev-HeritageTokenAuthorizerLambda7CAC4A4B-JZgFL3pblycx:live-alias/invocations
        authorizerResultTtlInSeconds: 0
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
x-affinidi-default-cors-operation:
  x-amazon-apigateway-integration:
    type: mock
    requestTemplates:
      application/json: |-
        {
        "statusCode" : 200
        }
    responses:
      default:
        statusCode: 200
        responseParameters:
          method.response.header.Access-Control-Allow-Headers:
            "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-amz-security-token,Access-Control-Allow-Headers,\
            \ Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method,\
            \ Access-Control-Request-Headers, Authorization'"
          method.response.header.Access-Control-Allow-Methods: "'*'"
          method.response.header.Access-Control-Allow-Origin: "'*'"
        responseTemplates:
          application/json: '{}'
x-affinidi-cors-response-headers:
  Access-Control-Allow-Origin:
    $ref: '#/components/headers/Access-Control-Allow-Origin'
  Access-Control-Allow-Methods:
    $ref: '#/components/headers/Access-Control-Allow-Methods'
  Access-Control-Allow-Headers:
    $ref: '#/components/headers/Access-Control-Allow-Headers'
