/*
 * CredentialIssuanceService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.affinidi.tdk.credential.issuance.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.affinidi.tdk.credential.issuance.client.models.CredentialProof;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * CreateCredentialInput
 */
@JsonPropertyOrder({
  CreateCredentialInput.JSON_PROPERTY_CREDENTIAL_IDENTIFIER,
  CreateCredentialInput.JSON_PROPERTY_PROOF
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class CreateCredentialInput {
  public static final String JSON_PROPERTY_CREDENTIAL_IDENTIFIER = "credential_identifier";
  @javax.annotation.Nullable
  private String credentialIdentifier;

  public static final String JSON_PROPERTY_PROOF = "proof";
  @javax.annotation.Nonnull
  private CredentialProof proof;

  public CreateCredentialInput() {
  }

  public CreateCredentialInput credentialIdentifier(@javax.annotation.Nullable String credentialIdentifier) {
    
    this.credentialIdentifier = credentialIdentifier;
    return this;
  }

  /**
   * It is a String that identifies a Credential that is being requested to be issued.
   * @return credentialIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDENTIAL_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCredentialIdentifier() {
    return credentialIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIAL_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCredentialIdentifier(@javax.annotation.Nullable String credentialIdentifier) {
    this.credentialIdentifier = credentialIdentifier;
  }

  public CreateCredentialInput proof(@javax.annotation.Nonnull CredentialProof proof) {
    
    this.proof = proof;
    return this;
  }

  /**
   * Get proof
   * @return proof
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROOF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CredentialProof getProof() {
    return proof;
  }


  @JsonProperty(JSON_PROPERTY_PROOF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProof(@javax.annotation.Nonnull CredentialProof proof) {
    this.proof = proof;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCredentialInput createCredentialInput = (CreateCredentialInput) o;
    return Objects.equals(this.credentialIdentifier, createCredentialInput.credentialIdentifier) &&
        Objects.equals(this.proof, createCredentialInput.proof);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentialIdentifier, proof);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCredentialInput {\n");
    sb.append("    credentialIdentifier: ").append(toIndentedString(credentialIdentifier)).append("\n");
    sb.append("    proof: ").append(toIndentedString(proof)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `credential_identifier` to the URL query string
    if (getCredentialIdentifier() != null) {
      try {
        joiner.add(String.format("%scredential_identifier%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCredentialIdentifier()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `proof` to the URL query string
    if (getProof() != null) {
      joiner.add(getProof().toUrlQueryString(prefix + "proof" + suffix));
    }

    return joiner.toString();
  }

}

