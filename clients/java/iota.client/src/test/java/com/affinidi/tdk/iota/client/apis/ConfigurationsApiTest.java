/*
 * IotaService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.affinidi.tdk.iota.client.apis;

import com.affinidi.tdk.iota.client.ApiException;
import com.affinidi.tdk.iota.client.models.AlreadyExistsError;
import com.affinidi.tdk.iota.client.models.CreateIotaConfigurationInput;
import com.affinidi.tdk.iota.client.models.GetIotaConfigurationMetaDataOK;
import com.affinidi.tdk.iota.client.models.InvalidParameterError;
import com.affinidi.tdk.iota.client.models.IotaConfigurationDto;
import com.affinidi.tdk.iota.client.models.ListConfigurationOK;
import com.affinidi.tdk.iota.client.models.NotFoundError;
import com.affinidi.tdk.iota.client.models.OperationForbiddenError;
import com.affinidi.tdk.iota.client.models.ResourceLimitExceededError;
import com.affinidi.tdk.iota.client.models.UpdateConfigurationByIdInput;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigurationsApi
 */
@Disabled
public class ConfigurationsApiTest {

    private final ConfigurationsApi api = new ConfigurationsApi();

    /**
     * Creates a new Affinidi Iota Framework configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIotaConfigurationTest() throws ApiException {
        CreateIotaConfigurationInput createIotaConfigurationInput = null;
        IotaConfigurationDto response = api.createIotaConfiguration(createIotaConfigurationInput);

        // TODO: test validations
    }
    /**
     * Deletes an Affinidi Iota Framework configuration by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIotaConfigurationByIdTest() throws ApiException {
        String configurationId = null;
        api.deleteIotaConfigurationById(configurationId);

        // TODO: test validations
    }
    /**
     * Retrieves the details of an Affinidi Iota Framework configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIotaConfigurationByIdTest() throws ApiException {
        String configurationId = null;
        IotaConfigurationDto response = api.getIotaConfigurationById(configurationId);

        // TODO: test validations
    }
    /**
     * Retrieves the client metadata of an Affinidi Iota Framework configuration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIotaConfigurationMetaDataTest() throws ApiException {
        String projectId = null;
        String configurationId = null;
        GetIotaConfigurationMetaDataOK response = api.getIotaConfigurationMetaData(projectId, configurationId);

        // TODO: test validations
    }
    /**
     * List all Affinidi Iota Framework configurations.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIotaConfigurationsTest() throws ApiException {
        ListConfigurationOK response = api.listIotaConfigurations();

        // TODO: test validations
    }
    /**
     * Updates the details of an Affinidi Iota Framework configuration by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIotaConfigurationByIdTest() throws ApiException {
        String configurationId = null;
        UpdateConfigurationByIdInput updateConfigurationByIdInput = null;
        IotaConfigurationDto response = api.updateIotaConfigurationById(configurationId, updateConfigurationByIdInput);

        // TODO: test validations
    }
}
