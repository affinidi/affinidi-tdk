/*
 * IotaService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.affinidi.tdk.iota.client.apis;

import com.affinidi.tdk.iota.client.ApiException;
import com.affinidi.tdk.iota.client.models.AwsExchangeCredentials;
import com.affinidi.tdk.iota.client.models.AwsExchangeCredentialsOK;
import com.affinidi.tdk.iota.client.models.AwsExchangeCredentialsProjectToken;
import com.affinidi.tdk.iota.client.models.FetchIOTAVPResponseInput;
import com.affinidi.tdk.iota.client.models.FetchIOTAVPResponseOK;
import com.affinidi.tdk.iota.client.models.InitiateDataSharingRequestInput;
import com.affinidi.tdk.iota.client.models.InitiateDataSharingRequestOK;
import com.affinidi.tdk.iota.client.models.InvalidParameterError;
import com.affinidi.tdk.iota.client.models.IotaExchangeCredentials;
import com.affinidi.tdk.iota.client.models.IotaExchangeCredentialsOK;
import com.affinidi.tdk.iota.client.models.NotFoundError;
import com.affinidi.tdk.iota.client.models.OperationForbiddenError;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IotaApi
 */
@Disabled
public class IotaApiTest {

    private final IotaApi api = new IotaApi();

    /**
     * Exchange a limited-scoped token into a Cognito credential to generate the identity credential. The identity
     * credential initiates the secure WebSocket connection from the client. This method is used only in WebSocket
     * data-sharing mode.
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void awsExchangeCredentialsTest() throws ApiException {
        AwsExchangeCredentials awsExchangeCredentials = null;
        AwsExchangeCredentialsOK response = api.awsExchangeCredentials(awsExchangeCredentials);

        // TODO: test validations
    }

    /**
     * Exchange a Project Scoped Token into an identity credential directly to initiate a secure WebSocket connection.
     * This method is used only in WebSocket data-sharing mode.
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void awsExchangeCredentialsProjectTokenTest() throws ApiException {
        AwsExchangeCredentialsProjectToken awsExchangeCredentialsProjectToken = null;
        IotaExchangeCredentialsOK response = api.awsExchangeCredentialsProjectToken(awsExchangeCredentialsProjectToken);

        // TODO: test validations
    }

    /**
     * Fetches the client&#39;s callback that contains the user&#39;s shared data in a Verifiable Presentation format
     * after a successful data-sharing flow.
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void fetchIotaVpResponseTest() throws ApiException {
        FetchIOTAVPResponseInput fetchIOTAVPResponseInput = null;
        FetchIOTAVPResponseOK response = api.fetchIotaVpResponse(fetchIOTAVPResponseInput);

        // TODO: test validations
    }

    /**
     * Generates the request token for the Redirect mode to initiate the data-sharing flow.
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void initiateDataSharingRequestTest() throws ApiException {
        InitiateDataSharingRequestInput initiateDataSharingRequestInput = null;
        InitiateDataSharingRequestOK response = api.initiateDataSharingRequest(initiateDataSharingRequestInput);

        // TODO: test validations
    }

    /**
     * Exchange a limited-scoped token into an identity credential directly to initiate a secure WebSocket connection.
     * This method is used only in WebSocket data-sharing mode.
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void iotaExchangeCredentialsTest() throws ApiException {
        IotaExchangeCredentials iotaExchangeCredentials = null;
        IotaExchangeCredentialsOK response = api.iotaExchangeCredentials(iotaExchangeCredentials);

        // TODO: test validations
    }
}
