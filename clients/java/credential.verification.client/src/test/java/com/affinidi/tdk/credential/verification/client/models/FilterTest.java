/*
 * VerificationService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.affinidi.tdk.credential.verification.client.models;

import com.affinidi.tdk.credential.verification.client.models.FilterConst;
import com.affinidi.tdk.credential.verification.client.models.FilterItems;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Filter
 */
public class FilterTest {
    private final Filter model = new Filter();

    /**
     * Model tests for Filter
     */
    @Test
    public void testFilter() {
        // TODO: test Filter
    }

    /**
     * Test the property '_const'
     */
    @Test
    public void _constTest() {
        // TODO: test _const
    }

    /**
     * Test the property '_enum'
     */
    @Test
    public void _enumTest() {
        // TODO: test _enum
    }

    /**
     * Test the property 'exclusiveMinimum'
     */
    @Test
    public void exclusiveMinimumTest() {
        // TODO: test exclusiveMinimum
    }

    /**
     * Test the property 'exclusiveMaximum'
     */
    @Test
    public void exclusiveMaximumTest() {
        // TODO: test exclusiveMaximum
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'formatMaximum'
     */
    @Test
    public void formatMaximumTest() {
        // TODO: test formatMaximum
    }

    /**
     * Test the property 'formatMinimum'
     */
    @Test
    public void formatMinimumTest() {
        // TODO: test formatMinimum
    }

    /**
     * Test the property 'formatExclusiveMaximum'
     */
    @Test
    public void formatExclusiveMaximumTest() {
        // TODO: test formatExclusiveMaximum
    }

    /**
     * Test the property 'formatExclusiveMinimum'
     */
    @Test
    public void formatExclusiveMinimumTest() {
        // TODO: test formatExclusiveMinimum
    }

    /**
     * Test the property 'minLength'
     */
    @Test
    public void minLengthTest() {
        // TODO: test minLength
    }

    /**
     * Test the property 'maxLength'
     */
    @Test
    public void maxLengthTest() {
        // TODO: test maxLength
    }

    /**
     * Test the property 'minimum'
     */
    @Test
    public void minimumTest() {
        // TODO: test minimum
    }

    /**
     * Test the property 'maximum'
     */
    @Test
    public void maximumTest() {
        // TODO: test maximum
    }

    /**
     * Test the property 'not'
     */
    @Test
    public void notTest() {
        // TODO: test not
    }

    /**
     * Test the property 'pattern'
     */
    @Test
    public void patternTest() {
        // TODO: test pattern
    }

    /**
     * Test the property 'contains'
     */
    @Test
    public void containsTest() {
        // TODO: test contains
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
