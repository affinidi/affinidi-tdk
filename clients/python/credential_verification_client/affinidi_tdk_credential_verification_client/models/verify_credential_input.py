# coding: utf-8

"""
    VerificationService

    Affinidi VerificationService Structure

    The version of the OpenAPI document: 1.0.0
    Contact: info@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, conlist
from affinidi_tdk_credential_verification_client.models.free_form_object import FreeFormObject
from affinidi_tdk_credential_verification_client.models.w3c_credential import W3cCredential

class VerifyCredentialInput(BaseModel):
    """
    Request model of /verify-vcs  # noqa: E501
    """
    verifiable_credentials: conlist(W3cCredential, min_items=1) = Field(..., alias="verifiableCredentials", description="List of VCs")
    issuer_did_document: Optional[FreeFormObject] = Field(None, alias="issuerDidDocument")
    __properties = ["verifiableCredentials", "issuerDidDocument"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> VerifyCredentialInput:
        """Create an instance of VerifyCredentialInput from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in verifiable_credentials (list)
        _items = []
        if self.verifiable_credentials:
            for _item in self.verifiable_credentials:
                if _item:
                    _items.append(_item.to_dict())
            _dict['verifiableCredentials'] = _items
        # override the default output from pydantic by calling `to_dict()` of issuer_did_document
        if self.issuer_did_document:
            _dict['issuerDidDocument'] = self.issuer_did_document.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> VerifyCredentialInput:
        """Create an instance of VerifyCredentialInput from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return VerifyCredentialInput.parse_obj(obj)

        _obj = VerifyCredentialInput.parse_obj({
            "verifiable_credentials": [W3cCredential.from_dict(_item) for _item in obj.get("verifiableCredentials")] if obj.get("verifiableCredentials") is not None else None,
            "issuer_did_document": FreeFormObject.from_dict(obj.get("issuerDidDocument")) if obj.get("issuerDidDocument") is not None else None
        })
        return _obj


