# coding: utf-8

"""
    VerificationService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, Dict, List, Optional
from pydantic import BaseModel, Field, StrictStr, conlist

class VerifyCredentialV2Input(BaseModel):
    """
    Request model of /v2/verify-vcs  # noqa: E501
    """
    verifiable_credentials: conlist(StrictStr, min_items=1) = Field(default=..., alias="verifiableCredentials", description="List of VC strings")
    issuer_did_document: Optional[Dict[str, Any]] = Field(default=None, alias="issuerDidDocument", description="Dynamic model")
    __properties = ["verifiableCredentials", "issuerDidDocument"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> VerifyCredentialV2Input:
        """Create an instance of VerifyCredentialV2Input from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> VerifyCredentialV2Input:
        """Create an instance of VerifyCredentialV2Input from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return VerifyCredentialV2Input.parse_obj(obj)

        _obj = VerifyCredentialV2Input.parse_obj({
            "verifiable_credentials": obj.get("verifiableCredentials"),
            "issuer_did_document": obj.get("issuerDidDocument")
        })
        return _obj


