# coding: utf-8

"""
    VerificationService

    Affinidi VerificationService Structure

    The version of the OpenAPI document: 1.0.0
    Contact: nucleus.team@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from affinidi_tdk_client_ver.models.submission_requirement import SubmissionRequirement  # noqa: E501

class TestSubmissionRequirement(unittest.TestCase):
    """SubmissionRequirement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmissionRequirement:
        """Test SubmissionRequirement
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmissionRequirement`
        """
        model = SubmissionRequirement()  # noqa: E501
        if include_optional:
            return SubmissionRequirement(
                name = '',
                purpose = '',
                rule = 'all',
                count = 56,
                min = 56,
                max = 56,
                var_from = '',
                from_nested = [
                    affinidi_tdk_client_ver.models.submission_requirement.SubmissionRequirement(
                        name = '', 
                        purpose = '', 
                        rule = 'all', 
                        count = 56, 
                        min = 56, 
                        max = 56, 
                        from = '', )
                    ]
            )
        else:
            return SubmissionRequirement(
                rule = 'all',
        )
        """

    def testSubmissionRequirement(self):
        """Test SubmissionRequirement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
