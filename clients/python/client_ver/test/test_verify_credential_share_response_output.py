# coding: utf-8

"""
    VerificationService

    Affinidi VerificationService Structure

    The version of the OpenAPI document: 1.0.0
    Contact: nucleus.team@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from affinidi_tdk_client_ver.models.verify_credential_share_response_output import VerifyCredentialShareResponseOutput  # noqa: E501

class TestVerifyCredentialShareResponseOutput(unittest.TestCase):
    """VerifyCredentialShareResponseOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VerifyCredentialShareResponseOutput:
        """Test VerifyCredentialShareResponseOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VerifyCredentialShareResponseOutput`
        """
        model = VerifyCredentialShareResponseOutput()  # noqa: E501
        if include_optional:
            return VerifyCredentialShareResponseOutput(
                jti = '',
                errors = [
                    ''
                    ],
                issuer = '',
                is_valid = True,
                supplied_credentials = [
                    None
                    ]
            )
        else:
            return VerifyCredentialShareResponseOutput(
                jti = '',
                errors = [
                    ''
                    ],
                issuer = '',
                is_valid = True,
                supplied_credentials = [
                    None
                    ],
        )
        """

    def testVerifyCredentialShareResponseOutput(self):
        """Test VerifyCredentialShareResponseOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
