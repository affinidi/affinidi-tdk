# coding: utf-8

"""
    VerificationService

    Affinidi VerificationService Structure

    The version of the OpenAPI document: 1.0.0
    Contact: nucleus.team@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field
from affinidi_tdk_client_ver.models.free_form_object import FreeFormObject

class BuildCredentialRequestOutput(BaseModel):
    """
    Response model of /build-credential-request  # noqa: E501
    """
    credential_share_request: FreeFormObject = Field(..., alias="credentialShareRequest")
    __properties = ["credentialShareRequest"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> BuildCredentialRequestOutput:
        """Create an instance of BuildCredentialRequestOutput from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of credential_share_request
        if self.credential_share_request:
            _dict['credentialShareRequest'] = self.credential_share_request.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> BuildCredentialRequestOutput:
        """Create an instance of BuildCredentialRequestOutput from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return BuildCredentialRequestOutput.parse_obj(obj)

        _obj = BuildCredentialRequestOutput.parse_obj({
            "credential_share_request": FreeFormObject.from_dict(obj.get("credentialShareRequest")) if obj.get("credentialShareRequest") is not None else None
        })
        return _obj


