# coding: utf-8

"""
    IotaService

    Affinidi IotaService Structure

    The version of the OpenAPI document: 1.0.0
    Contact: nucleus.team@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from affinidi_tdk_iota_client.models.list_logged_consents_ok import ListLoggedConsentsOK  # noqa: E501

class TestListLoggedConsentsOK(unittest.TestCase):
    """ListLoggedConsentsOK unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListLoggedConsentsOK:
        """Test ListLoggedConsentsOK
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListLoggedConsentsOK`
        """
        model = ListLoggedConsentsOK()  # noqa: E501
        if include_optional:
            return ListLoggedConsentsOK(
                consents = [
                    affinidi_tdk_iota_client.models.consent_dto.ConsentDto(
                        project_id = '', 
                        id = '', 
                        user_id = '', 
                        vc_type = '', 
                        status = 'GIVEN', 
                        updated_at = '', )
                    ],
                last_evaluated_key = ''
            )
        else:
            return ListLoggedConsentsOK(
                consents = [
                    affinidi_tdk_iota_client.models.consent_dto.ConsentDto(
                        project_id = '', 
                        id = '', 
                        user_id = '', 
                        vc_type = '', 
                        status = 'GIVEN', 
                        updated_at = '', )
                    ],
        )
        """

    def testListLoggedConsentsOK(self):
        """Test ListLoggedConsentsOK"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
