# coding: utf-8

"""
    KnowYourCustomer

    Affinidi KnowYourCustomer Structure

    The version of the OpenAPI document: 1.0.0
    Contact: consumer-eng@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from affinidi_tdk_client_kyc.models.code_mismatch_exception_error import CodeMismatchExceptionError  # noqa: E501

class TestCodeMismatchExceptionError(unittest.TestCase):
    """CodeMismatchExceptionError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeMismatchExceptionError:
        """Test CodeMismatchExceptionError
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeMismatchExceptionError`
        """
        model = CodeMismatchExceptionError()  # noqa: E501
        if include_optional:
            return CodeMismatchExceptionError(
                name = 'CodeMismatchExceptionError',
                message = 'Invalid code',
                http_status_code = 400,
                trace_id = '',
                details = [
                    affinidi_tdk_client_kyc.models.rate_limit_exceeded_error_details_inner.RateLimitExceededError_details_inner(
                        issue = '', 
                        field = '', 
                        value = '', 
                        location = '', )
                    ]
            )
        else:
            return CodeMismatchExceptionError(
                name = 'CodeMismatchExceptionError',
                message = 'Invalid code',
                http_status_code = 400,
                trace_id = '',
        )
        """

    def testCodeMismatchExceptionError(self):
        """Test CodeMismatchExceptionError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
