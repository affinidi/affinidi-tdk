# coding: utf-8

"""
    OidcVpAdapterBackend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@affinidi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from affinidi_tdk_login_configuration_client.models.oidc_config_credentials_supported_draft00_inner import OIDCConfigCredentialsSupportedDraft00Inner  # noqa: E501

class TestOIDCConfigCredentialsSupportedDraft00Inner(unittest.TestCase):
    """OIDCConfigCredentialsSupportedDraft00Inner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OIDCConfigCredentialsSupportedDraft00Inner:
        """Test OIDCConfigCredentialsSupportedDraft00Inner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OIDCConfigCredentialsSupportedDraft00Inner`
        """
        model = OIDCConfigCredentialsSupportedDraft00Inner()  # noqa: E501
        if include_optional:
            return OIDCConfigCredentialsSupportedDraft00Inner(
                cryptographic_binding_methods_supported = [
                    ''
                    ],
                cryptographic_suites_supported = [
                    ''
                    ],
                format = '',
                types = [
                    ''
                    ]
            )
        else:
            return OIDCConfigCredentialsSupportedDraft00Inner(
        )
        """

    def testOIDCConfigCredentialsSupportedDraft00Inner(self):
        """Test OIDCConfigCredentialsSupportedDraft00Inner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
