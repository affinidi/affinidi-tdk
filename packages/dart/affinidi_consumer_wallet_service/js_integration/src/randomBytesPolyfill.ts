function insecureRandomValues(array: Uint8Array) {
  // for (let i = 0, r; i < array.length; i++) {
  //   if ((i & 0x03) === 0) r = Math.random() * 0x100000000
  //   array[i] = (r! >>> ((i & 0x03) << 3)) & 0xff
  // }

  const randomArray = ((global as any).randomArrays as Uint8Array[]).pop()

  if (!randomArray) {
    throw new Error('Random array should be generated by host')
  }

  for (let i = 0; i < array.length; i++) {
    array[i] = randomArray[i]
  }
  
  return Buffer.from(array)
}

if (!(globalThis as any).crypto?.getRandomValues) {
  (globalThis as any).crypto = (globalThis as any).crypto ?? {};
  (globalThis as any).crypto.getRandomValues = insecureRandomValues 
}